.bg-left     { background-position-x: left; }
.bg-right    { background-position-x: right; }
.bg-bottom   { background-position-y: bottom; }
.bg-top      { background-position-y: top; }
.bg-x-center { background-position-x: center; }
.bg-y-center { background-position-y: center; }

.bg-cover    { background-size: cover; }
.bg-contain  { background-size: contain; }

.bg-image    { background-position: center center; background-size: cover; }

.bg-repeat-x { background-repeat: repeat-x; }
.bg-repeat-y { background-repeat: repeat-y; }
.bg-repeat-0 { background-repeat: no-repeat; }

.bg-white { background: #fff; }
.bg-black { background: #000; }

.bg-default    { background: var(--background-color-default); }
.bg-highlight  { background: var(--background-color-highlight); }

/* stock colors */
.bg-blue                { background: var(--color-blue); }
.bg-blue-light          { background: var(--color-blue-light); }
.bg-yellow              { background: var(--color-yellow); }
.bg-yellow-light        { background: var(--color-yellow-light); }
.bg-green               { background: var(--color-green); }
.bg-green-light         { background: var(--color-green-light); }
.bg-red                 { background: var(--color-red); }
.bg-red-light           { background: var(--color-red-light); }

/* contextual colors */
.bg-info                { background: var(--color-blue); }
.bg-info-light          { background: var(--color-blue-light); }
.bg-warning             { background: var(--color-yellow); }
.bg-warning-light       { background: var(--color-yellow-light); }
.bg-success             { background: var(--color-green); }
.bg-success-light       { background: var(--color-green-light); }
.bg-error               { background: var(--color-red); }
.bg-error-light         { background: var(--color-red-light); }

/* brand colors */
.bg-primary             { background: var(--color-primary); }
.bg-primary-light       { background: var(--color-primary-light); }
.bg-secondary           { background: var(--color-secondary); }
.bg-secondary-light     { background: var(--color-secondary-light); }
.bg-tertiary            { background: var(--color-tertiary); }
.bg-tertiary-light      { background: var(--color-tertiary-light); }
.bg-quaternary          { background: var(--color-quaternary); }
.bg-quaternary-light    { background: var(--color-quaternary-light); }
.bg-complementary       { background: var(--color-complementary); }
.bg-complementary-light { background: var(--color-complementary-light); }

.bg-highlight-hover:hover,
.bg-highlight-hover:focus {
  background-color: var(--background-color-highlight);
}

.bg-transparent {
  background: transparent;
}
.bg-transparent:hover,
.bg-transparent:focus {
  background-image: none;
}

.bg-gradient {
  --direction: to bottom;
  --from: white;
  --to: black;
  background: linear-gradient(var(--direction), var(--from), var(--to));
}

.bg-stripes {
  background: repeating-linear-gradient(
    -45deg,
    var(--background-color-highlight),
    var(--background-color-highlight) 10px,
    var(--background-color-default) 10px,
    var(--background-color-default) 20px
  );
}

.bg-squares {
  background:
    linear-gradient(45deg, var(--background-color-highlight) 25%, transparent 25%, transparent 75%, var(--background-color-highlight) 75%, var(--background-color-highlight)),
    linear-gradient(45deg, var(--background-color-highlight) 25%, transparent 25%, transparent 75%, var(--background-color-highlight) 75%, var(--background-color-highlight));
  background-size: 30px 30px;
  background-position: 0 0, 15px 15px;
}

.bg-shade {
  /**
  * background shade
  * uses easing function plugin
  * color stops are processed at build time to create easing gradient
  * doesn't accept custom values at the front-end
  * https://www.npmjs.com/package/postcss-easing-gradients
  */
  background: linear-gradient(to bottom, hsla(240, 100%, 2%, 0), ease-in-out, hsla(240, 100%, 2%, 0.7));
}
